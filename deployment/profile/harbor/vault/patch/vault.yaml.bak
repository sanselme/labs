# Copyright (c) 2023 Schubert Anselme <schubert@anselm.es>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vault
spec:
  values:
    global:
      tlsDisable: true
      serverTelemetry:
        prometheusOperator: true
    injector:
      replicas: 1
      metrics:
        enabled: true
    server:
      readinessProbe:
        path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
      postStart:
        - /bin/sh
        - -c
        - >-
          sleep 5 && cp /vault/userconfig/scripts/vault-unseal.sh
          /tmp/vault-unseal.sh && chmod +x /tmp/vault-unseal.sh &&
          /tmp/vault-unseal.sh
      volumes:
        - name: vault-script
          configMap:
            name: vault-script
            defaultMode: 0755
      volumeMounts:
        - mountPath: /vault/userconfig/scripts
          name: vault-script
          readOnly: true
      dataStorage:
        storageClass: ceph-block
      auditStorage:
        enabled: true
        storageClass: ceph-block
      standalone:
        config: |
          ui = true

          listener "tcp" {
            tls_disable = 1
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            # Enable unauthenticated metrics access (necessary for Prometheus Operator)
            #telemetry {
            #  unauthenticated_metrics_access = "true"
            #}
          }
          storage "file" {
            path = "/vault/data"
          }

          # Example configuration for using auto-unseal, using Google Cloud KMS. The
          # GKMS keys must already exist, and the cluster must have a service account
          # that is authorized to access GCP KMS.
          #seal "gcpckms" {
          #   project     = "vault-helm-dev"
          #   region      = "global"
          #   key_ring    = "vault-helm-unseal-kr"
          #   crypto_key  = "vault-helm-unseal-key"
          #}

          # Example configuration for enabling Prometheus metrics in your config.
          #telemetry {
          #  prometheus_retention_time = "30s"
          #  disable_hostname = true
          #}
      ha:
        enabled: false
        replicas: 3
        raft:
          enabled: true
          setNodeId: true
    serverTelemetry:
      serviceMonitor:
        enabled: true
      prometheusRules:
        enabled: true
