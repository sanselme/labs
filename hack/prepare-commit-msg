#!/usr/bin/env python

"""
Copyright (c) 2023 Schubert Anselme <schubert@anselm.es>.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <https://www.gnu.org/licenses/>.
"""

# from subprocess import check_output
# import re
import sys

# Collect the parameters
commit_msg_filepath = sys.argv[1]

if len(sys.argv) > 2:
    commit_type = sys.argv[2]
else:
    commit_type = ""

if len(sys.argv) > 3:
    commit_hash = sys.argv[3]
else:
    commit_hash = ""

print(
    "prepare-commit-msg: File: %s\nType: %s\nHash: %s"
    % (commit_msg_filepath, commit_type, commit_hash)
)

# FIXME: Figure out wich branch we are on
# branch = (
#     check_output(["git", "rev-parse", "--abbrev-ref", "HEAD"]).strip().decode("utf-8")
# )
# print("prepare-commit-msg: On branch: %s" % branch)

# Populate the commit message with the issue #, if there is one
# if branch.startswith("issue-"):
#     issue_number = re.match("issue-(.*)", branch).group(1)
#     print("prepare-commit-msg: Issue: %s" % issue_number)

#     commit_msg = "issue-%s\n\n" % issue_number

#     with open(commit_msg_filepath, "r") as f:
#         content = f.read()
#         f.seek(0, 0)
#         f.write(commit_msg, content)
